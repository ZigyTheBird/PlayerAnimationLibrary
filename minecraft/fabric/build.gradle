plugins {
    id "com.gradleup.shadow"
}

loom {
    accessWidenerPath = project(":minecraft:common").loom.accessWidenerPath
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API
    modImplementation fabricApi.module("fabric-command-api-v2", rootProject.fabric_api_version)
    modImplementation fabricApi.module("fabric-resource-loader-v0", rootProject.fabric_api_version)

    implementation include("com.zigythebird:mochafloats:$rootProject.molang_version") {
        transitive = false
    }
    modRuntimeOnly include("org.javassist:javassist:$rootProject.javassist_version")

    common(project(path: ":minecraft:common", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":minecraft:common", configuration: "transformProductionFabric")) { transitive = false }
    common shadowCommon(project(path: ":core")) { transitive = false }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = 'dev-shadow'
    mergeServiceFiles()
}

remapJar {
    injectAccessWidener = true

    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set "dev"
}

sourcesJar {
    def commonSources = project(":minecraft:common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

shadow {
    addShadowVariantIntoJavaComponent = false
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = "PlayerAnimationLibFabric"
            from components.java
        }
    }
}
