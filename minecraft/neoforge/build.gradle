plugins {
    id "com.gradleup.shadow"
}

loom {
    accessWidenerPath = project(":minecraft:common").loom.accessWidenerPath
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    implementation forgeRuntimeLibrary(shadowCommon("com.zigythebird:mochafloats:$rootProject.molang_version")) {
        transitive = false
    }
    modRuntimeOnly forgeRuntimeLibrary(include("org.javassist:javassist:$rootProject.javassist_version"))

    common(project(path: ":minecraft:common", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":minecraft:common", configuration: "transformProductionNeoForge")) { transitive = false }
    common shadowCommon(project(path: ":core")) { transitive = false }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set "dev-shadow"

    relocate 'team.unnamed.mocha', 'com.zigythebird.playeranim.lib.mochafloats'
    mergeServiceFiles()
}

remapJar {
    atAccessWideners.add(loom.accessWidenerPath.get().asFile.name)

    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set "dev"
}

sourcesJar {
    def commonSources = project(":minecraft:common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenNeoForge(MavenPublication) {
            artifactId = "PlayerAnimationLibNeo"
            from components.java
        }
    }
}
